let wk = document.querySelectorAll("*");
wk.forEach((e) => {
  let wk_color = e.getAttribute("wk-color");
  let wk_bg_color = e.getAttribute("wk-bg-color");
  let wk_otl = e.getAttribute("wk-otl");
  let wk_brd = e.getAttribute("wk-brd");
  let wk_pd = e.getAttribute("wk-pd");
  let wk_mg = e.getAttribute("wk-mg");
  let wk_maxWidth = e.getAttribute("wk-maxWidth");
  let wk_minWidth = e.getAttribute("wk-minWidth");
  let wk_maxHeight = e.getAttribute("wk-maxHeight");
  let wk_minHeight = e.getAttribute("wk-minHeight");
  let wk_height = e.getAttribute("wk-height");
  let wk_width = e.getAttribute("wk-width");
  let wk_allHeight = e.getAttribute("wk-allHeight");
  let wk_allWidth = e.getAttribute("wk-allWidth");
  let wk_kroshka = e.getAttribute("wk-kroshka");
  if (wk_color) {
    switch (wk_color) {
      case "primary":
        e.style.color = "rgb(13, 110, 253)";
        break;
      case "secondary":
        e.style.color = "rgb(108, 117, 125)";
        break;
      case "success":
        e.style.color = "rgb(25, 135, 84)";
        break;
      case "danger":
        e.style.color = "rgb(220, 53, 69)";
        break;
      case "warning":
        e.style.color = "rgb(255, 193, 7)";
        break;
      case "info":
        e.style.color = "rgb(13, 202, 240)";
        break;
      case "light":
        e.style.color = "rgb(248, 249, 250)";
        break;
      case "dark":
        e.style.color = "rgb(33, 37, 41)";
        break;
      default:
        e.style.color = wk_color;
        break;
    }
  }
  if (wk_bg_color) {
    switch (wk_bg_color) {
      case "primary":
        e.style.backgroundColor = "rgb(13, 110, 253)";
        break;
      case "secondary":
        e.style.backgroundColor = "rgb(108, 117, 125)";
        break;
      case "success":
        e.style.backgroundColor = "rgb(25, 135, 84)";
        break;
      case "danger":
        e.style.backgroundColor = "rgb(220, 53, 69)";
        break;
      case "warning":
        e.style.backgroundColor = "rgb(255, 193, 7)";
        break;
      case "info":
        e.style.backgroundColor = "rgb(13, 202, 240)";
        break;
      case "light":
        e.style.backgroundColor = "rgb(248, 249, 250)";
        break;
      case "dark":
        e.style.backgroundColor = "rgb(33, 37, 41)";
        break;
      default:
        e.style.backgroundColor = wk_bg_color;
        break;
    }
  }
  if (wk_otl) {
    switch (wk_otl) {
      case "hidden":
        e.style.outline = "hidden";
        e.style.WebkitOutline = "hidden";
        e.style.MozOutline = "hidden";
        e.style.MsOutline = "hidden";
        e.style.OOutline = "hidden";
        break;
      default:
        e.style.outline = wk_otl;
        e.style.WebkitOutline = wk_otl;
        e.style.MozOutline = wk_otl;
        e.style.MsOutline = wk_otl;
        e.style.OOutline = wk_otl;
        break;
    }
  }
  if (wk_brd) {
    switch (wk_brd) {
      case "none":
        e.style.border = "none";
        e.style.WebkitBorder = "none";
        e.style.MozBorder = "none";
        e.style.MsBorder = "none";
        e.style.OBorder = "none";
        break;
      default:
        e.style.border = wk_brd;
        e.style.WebkitBorder = wk_brd;
        e.style.MozBorder = wk_brd;
        e.style.MsBorder = wk_brd;
        e.style.OBorder = wk_brd;
        break;
    }
  }
  if (wk_pd) {
    switch (wk_pd) {
      case "0":
        e.style.padding = "0px";
        break;
      default:
        e.style.padding = wk_pd;
        break;
    }
  }
  if (wk_mg) {
    switch (wk_mg) {
      case "0":
        e.style.margin = "0px";
        break;
      default:
        e.style.margin = wk_mg;
        break;
    }
  }
  if (wk_maxWidth) {
    e.style.maxWidth = wk_maxWidth;
  }
  if (wk_minWidth) {
    e.style.minWidth = wk_minWidth;
  }
  if (wk_minHeight) {
    e.style.minHeight = wk_minHeight;
  }
  if (wk_maxHeight) {
    e.style.maxHeight = wk_maxHeight;
  }
  if (wk_height) {
    e.style.height = wk_height;
  }
  if (wk_width) {
    e.style.width = wk_width;
  }
  if (wk_allHeight) {
    e.style.minHeight = wk_allHeight;
    e.style.maxHeight = wk_allHeight;
    e.style.height = wk_allHeight;
  }
  if (wk_allWidth) {
    e.style.minWidth = wk_allWidth;
    e.style.maxHeight = wk_allWidth;
    e.style.width = wk_allWidth;
  }
  if (wk_kroshka) {
    let random_class = Math.floor(Math.random() * 99999);
    let s = document.createElement('style');
    s.append('.is-k-' + random_class + ':not(:first-child)::before {content: "' + wk_kroshka + '" !important}');
    document.head.append(s);
    e.querySelectorAll("li").forEach((k) => {
      k.classList.add("is-k-" + random_class);
    });
  }
});
let wkBtnDelJsActive = document.querySelectorAll(".wk-btn-del.js-active");
wkBtnDelJsActive.forEach((e) => {
  e.addEventListener("click", () => {
    if (e.parentNode.classList.contains("wk-tag") || e.parentNode.classList.contains("wk-notification")) {
      e.parentNode.remove();
    } else {
      e.parentNode.parentNode.remove();
    }
  });
});

let wkBtnDelJsActive2 = document.querySelectorAll(".is-del.js-active");
wkBtnDelJsActive2.forEach((e) => {
  e.addEventListener("click", () => {
    e.parentNode.remove();
  });
});
let wkBtnDropdownJsActive = document.querySelectorAll(".wk-dropdown.js-active");
wkBtnDropdownJsActive.forEach((e) => {
  e.addEventListener("click", () => {
    e.classList.toggle("is-active");
  });
});
let wk_navbar_toggle = document.querySelectorAll(".wk-navbar-toggle");
wk_navbar_toggle.forEach((e) => {
  e.addEventListener("click", () => {
    e.parentNode.parentNode.classList.toggle("is-active");
  });
});
let wk_nav_item_is_dropdown = document.querySelectorAll(".wk-nav-item.is-dropdown");
wk_nav_item_is_dropdown.forEach((e) => {
  e.addEventListener("click", () => {
    e.classList.toggle("is-active");
  });
});
document.querySelectorAll(".wk-modal-close.js-active").forEach((e) => {
  e.addEventListener("click", () => {
    e.parentNode.classList.toggle("is-active");
  });
});
document.querySelectorAll(".wk-modal .wk-modal-background.is-active").forEach((e) => {
  e.addEventListener("click", () => {
    if (e.parentNode.classList.contains("is-active")) {
      e.parentNode.classList.remove("is-active");
    }
  });
})
let wk_navbar = document?.querySelectorAll(".wk-navbar");
let wk_navbar_content = document?.querySelectorAll(".wk-navbar-content");

let wk_navbar_func = () => {
  if (typeof (wk_navbar) != 'undefined' && wk_navbar != null) {
    wk_navbar.forEach((e) => {
      if (e.scrollHeight > e.offsetHeight) {
        e.classList.add("is-mobile");
      } else {
        e.classList.contains("is-mobile") ? e.classList.remove("is-mobile") : null;
      }
    });
  }
};
wk_navbar_func();
window.addEventListener('resize', () => {
  wk_navbar_func();
});

document.querySelectorAll(".js-active-modal").forEach((e) => {
  e.addEventListener("click", () => {
    document.querySelector(".wk-modal[data-id='" + e.dataset.id + "']").classList.toggle("is-active");
  });
});

document.querySelectorAll(".wk-modal-delete").forEach((e) => {
  e.addEventListener("click", () => {
    e.parentNode.parentNode.parentNode.classList.toggle("is-active");
  });
});

document.querySelectorAll(".wk-modal-card-foot .wk-btn.is-delete").forEach((e) => {
  e.addEventListener("click", () => {
    e.parentNode.parentNode.parentNode.parentNode.classList.toggle("is-active");
  });
});

/* Для сайта Magic-WK */
let block_code_btn_content = document.querySelectorAll(".block_code_btn_content");
block_code_btn_content.forEach((e) => {
  e.addEventListener("click", () => {
    e.textContent == "Скрыть" ? e.textContent = "Показать" : e.textContent = "Скрыть";
    e.parentNode.classList.toggle("code_btn");
  });
  e.parentNode.querySelector(".block_code__code pre").style.paddingBottom = "47px";
});